{"version":3,"file":"reload-41695ad2.js","sources":["../src/util/reload.ts"],"sourcesContent":["import http from 'http'\r\n\r\nconst context = {\r\n  hasInitialized: false,\r\n  isReloading: false,\r\n}\r\n\r\nexport const reload = (): void => {\r\n  if (!context.hasInitialized) {\r\n    context.hasInitialized = true\r\n    return\r\n  }\r\n\r\n  if (context.isReloading) return\r\n\r\n  const options = {\r\n    hostname: 'localhost',\r\n    port: 8000,\r\n    path: '/reload',\r\n    method: 'GET',\r\n  }\r\n\r\n  try {\r\n    context.isReloading = true\r\n\r\n    const req = http.request(options, (res) => {\r\n      res.on('data', (data) => {\r\n        context.isReloading = false\r\n\r\n        console.log('Reload successful')\r\n      })\r\n    })\r\n    req.on('error', (err) => {\r\n      console.log('Failed to connect...')\r\n      return setTimeout(reload, 1000)\r\n    })\r\n\r\n    setTimeout(() => {\r\n      req.end()\r\n    }, 1000)\r\n\r\n    return\r\n  } catch (err) {\r\n    console.log(err)\r\n    console.log('Failed to connect...')\r\n    setTimeout(reload, 1000)\r\n    return\r\n  }\r\n}\r\n"],"names":["context","reload","options","req","http","res","data","err"],"mappings":"qCACMA,EAAU,CACd,eAAgB,GAChB,YAAa,EACf,EACaC,EAAS,IAAM,CACtB,GAAA,CAACD,EAAQ,eAAgB,CAC3BA,EAAQ,eAAiB,GACzB,OAEF,GAAIA,EAAQ,YAAa,OACzB,MAAME,EAAU,CACd,SAAU,YACV,KAAM,IACN,KAAM,UACN,OAAQ,KAAA,EAEN,GAAA,CACFF,EAAQ,YAAc,GACtB,MAAMG,EAAMC,EAAK,QAAQF,EAAgBG,GAAA,CACnCA,EAAA,GAAG,OAAgBC,GAAA,CACrBN,EAAQ,YAAc,GACtB,QAAQ,IAAI,mBAAmB,CAAA,CAChC,CAAA,CACF,EACGG,EAAA,GAAG,QAAgBI,IACrB,QAAQ,IAAI,sBAAsB,EAC3B,WAAWN,EAAQ,GAAI,EAC/B,EACD,WAAW,IAAM,CACfE,EAAI,IAAI,GACP,GAAI,EACP,aACOI,GACP,QAAQ,IAAIA,CAAG,EACf,QAAQ,IAAI,sBAAsB,EAClC,WAAWN,EAAQ,GAAI,EACvB,MACF,CACF"}