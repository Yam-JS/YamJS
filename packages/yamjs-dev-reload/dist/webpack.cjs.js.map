{"version":3,"file":"webpack.cjs.js","sources":["../src/webpack/util.ts","../src/webpack/formatWebpackMessages.ts","../src/webpack/buildWebpack.ts","../src/webpack.ts"],"sourcesContent":["const isInteractive = () => process.stdout.isTTY\r\n\r\nexport function clearWebpackConsole() {\r\n  if (isInteractive()) {\r\n    process.stdout.write(process.platform === 'win32' ? '\\x1B[2J\\x1B[0f' : '\\x1B[2J\\x1B[3J\\x1B[H')\r\n  }\r\n}\r\n","/**\r\n * MIT License\r\n *\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n// fork from https://github.com/facebook/create-react-app/blob/main/packages/react-dev-utils/formatWebpackMessages.js\r\nconst friendlySyntaxErrorLabel = 'Syntax error:'\r\n\r\nfunction isLikelyASyntaxError(message: any) {\r\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1\r\n}\r\n\r\n// Cleans up webpack error messages.\r\nfunction formatMessage(message: any) {\r\n  let lines: string[] = []\r\n\r\n  if (typeof message === 'string') {\r\n    lines = message.split('\\n')\r\n  } else if ('message' in message) {\r\n    lines = message['message'].split('\\n')\r\n  } else if (Array.isArray(message)) {\r\n    message.forEach((message) => {\r\n      if ('message' in message) {\r\n        lines = message['message'].split('\\n')\r\n      }\r\n    })\r\n  }\r\n\r\n  // Strip webpack-added headers off errors/warnings\r\n  // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\r\n  lines = lines.filter((line) => !/Module [A-z ]+\\(from/.test(line))\r\n\r\n  // Transform parsing error into syntax error\r\n  // TODO: move this to our ESLint formatter?\r\n  lines = lines.map((line) => {\r\n    const parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(line)\r\n    if (!parsingError) {\r\n      return line\r\n    }\r\n    const [, errorLine, errorColumn, errorMessage] = parsingError\r\n    return `${friendlySyntaxErrorLabel} ${errorMessage} (${errorLine}:${errorColumn})`\r\n  })\r\n\r\n  message = lines.join('\\n')\r\n  // Smoosh syntax errors (commonly found in CSS)\r\n  message = message.replace(/SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g, `${friendlySyntaxErrorLabel} $3 ($1:$2)\\n`)\r\n  // Clean up export errors\r\n  message = message.replace(\r\n    /^.*export '(.+?)' was not found in '(.+?)'.*$/gm,\r\n    `Attempted import error: '$1' is not exported from '$2'.`\r\n  )\r\n  message = message.replace(\r\n    /^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\r\n    `Attempted import error: '$2' does not contain a default export (imported as '$1').`\r\n  )\r\n  message = message.replace(\r\n    /^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\r\n    `Attempted import error: '$1' is not exported from '$3' (imported as '$2').`\r\n  )\r\n  lines = message.split('\\n')\r\n\r\n  // Remove leading newline\r\n  if (lines.length > 2 && lines[1].trim() === '') {\r\n    lines.splice(1, 1)\r\n  }\r\n  // Clean up file name\r\n  lines[0] = lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/, '$1')\r\n\r\n  // Cleans up verbose \"module not found\" messages for files and packages.\r\n  if (lines[1] && lines[1].indexOf('Module not found: ') === 0) {\r\n    lines = [\r\n      lines[0],\r\n      lines[1].replace('Error: ', '').replace('Module not found: Cannot find file:', 'Cannot find file:'),\r\n    ]\r\n  }\r\n\r\n  message = lines.join('\\n')\r\n  // Internal stacks are generally useless so we strip them... with the\r\n  // exception of stacks containing `webpack:` because they're normally\r\n  // from user code generated by webpack. For more information see\r\n  // https://github.com/facebook/create-react-app/pull/1050\r\n  message = message.replace(/^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm, '') // at ... ...:x:y\r\n  message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, '') // at <anonymous>\r\n  lines = message.split('\\n')\r\n\r\n  // Remove duplicated newlines\r\n  lines = lines.filter((line, index, arr) => index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim())\r\n\r\n  // Reassemble the message\r\n  message = lines.join('\\n')\r\n  return message.trim()\r\n}\r\n\r\n/**\r\n * This takes the webpack stats and makes it more presentable.\r\n */\r\nexport function formatWebpackMessages(json: any) {\r\n  const formattedErrors = json.errors.map(formatMessage)\r\n  const formattedWarnings = json.warnings.map(formatMessage)\r\n  const result = { errors: formattedErrors, warnings: formattedWarnings }\r\n  if (result.errors.some(isLikelyASyntaxError)) {\r\n    // If there are any syntax errors, show just them.\r\n    result.errors = result.errors.filter(isLikelyASyntaxError)\r\n  }\r\n  return result\r\n}\r\n","import webpack from 'webpack'\r\nimport http from 'http'\r\nimport path from 'path'\r\nimport { clearWebpackConsole } from './util'\r\nimport { formatWebpackMessages } from './formatWebpackMessages'\r\nimport { reload } from '../util/reload'\r\n\r\nconst isInteractive = process.stdout.isTTY\r\n\r\nexport async function startWebpack(root: string) {\r\n  const createConfig = require(path.join(root, 'webpack.config.js'))\r\n  const config = createConfig({ dev: true })\r\n\r\n  let compiler: webpack.Compiler\r\n  try {\r\n    compiler = webpack(config, (error, stats) => {\r\n      return\r\n    })\r\n  } catch (err) {\r\n    console.log(err)\r\n\r\n    process.exit(1)\r\n  }\r\n\r\n  if (isInteractive) {\r\n    clearWebpackConsole()\r\n  }\r\n\r\n  compiler.hooks.invalid.tap('invalid', () => {\r\n    clearWebpackConsole()\r\n\r\n    console.log('Compiling...')\r\n  })\r\n\r\n  compiler.hooks.done.tap('done', async (stats) => {\r\n    clearWebpackConsole()\r\n    const messages = formatWebpackMessages(\r\n      stats.toJson({\r\n        all: false,\r\n        warnings: true,\r\n        errors: true,\r\n      })\r\n    )\r\n\r\n    for (const message of messages.errors) {\r\n      console.log(message)\r\n    }\r\n\r\n    console.log(messages.errors.length ? 'Failed to compile.' : 'Compiled successfully.')\r\n\r\n    reload()\r\n  })\r\n\r\n  return compiler.watch({}, (stats) => {\r\n    stats ?? console.log(stats)\r\n  })\r\n}\r\n","import { startWebpack } from './webpack/buildWebpack'\r\nimport path from 'path'\r\n\r\nstartWebpack(path.resolve(process.cwd()))\r\n"],"names":["isInteractive","clearWebpackConsole","friendlySyntaxErrorLabel","isLikelyASyntaxError","message","formatMessage","lines","line","parsingError","errorLine","errorColumn","errorMessage","index","arr","formatWebpackMessages","json","formattedErrors","formattedWarnings","result","startWebpack","root","config","path","compiler","webpack","error","stats","err","messages","reload"],"mappings":"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"}