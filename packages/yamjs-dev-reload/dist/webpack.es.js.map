{"version":3,"file":"webpack.es.js","sources":["../src/webpack/util.ts","../src/webpack/formatWebpackMessages.ts","../src/webpack/buildWebpack.ts","../src/webpack.ts"],"sourcesContent":["const isInteractive = () => process.stdout.isTTY\r\n\r\nexport function clearWebpackConsole() {\r\n  if (isInteractive()) {\r\n    process.stdout.write(process.platform === 'win32' ? '\\x1B[2J\\x1B[0f' : '\\x1B[2J\\x1B[3J\\x1B[H')\r\n  }\r\n}\r\n","/**\r\n * MIT License\r\n *\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n// fork from https://github.com/facebook/create-react-app/blob/main/packages/react-dev-utils/formatWebpackMessages.js\r\nconst friendlySyntaxErrorLabel = 'Syntax error:'\r\n\r\nfunction isLikelyASyntaxError(message: any) {\r\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1\r\n}\r\n\r\n// Cleans up webpack error messages.\r\nfunction formatMessage(message: any) {\r\n  let lines: string[] = []\r\n\r\n  if (typeof message === 'string') {\r\n    lines = message.split('\\n')\r\n  } else if ('message' in message) {\r\n    lines = message['message'].split('\\n')\r\n  } else if (Array.isArray(message)) {\r\n    message.forEach((message) => {\r\n      if ('message' in message) {\r\n        lines = message['message'].split('\\n')\r\n      }\r\n    })\r\n  }\r\n\r\n  // Strip webpack-added headers off errors/warnings\r\n  // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\r\n  lines = lines.filter((line) => !/Module [A-z ]+\\(from/.test(line))\r\n\r\n  // Transform parsing error into syntax error\r\n  // TODO: move this to our ESLint formatter?\r\n  lines = lines.map((line) => {\r\n    const parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(line)\r\n    if (!parsingError) {\r\n      return line\r\n    }\r\n    const [, errorLine, errorColumn, errorMessage] = parsingError\r\n    return `${friendlySyntaxErrorLabel} ${errorMessage} (${errorLine}:${errorColumn})`\r\n  })\r\n\r\n  message = lines.join('\\n')\r\n  // Smoosh syntax errors (commonly found in CSS)\r\n  message = message.replace(/SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g, `${friendlySyntaxErrorLabel} $3 ($1:$2)\\n`)\r\n  // Clean up export errors\r\n  message = message.replace(\r\n    /^.*export '(.+?)' was not found in '(.+?)'.*$/gm,\r\n    `Attempted import error: '$1' is not exported from '$2'.`\r\n  )\r\n  message = message.replace(\r\n    /^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\r\n    `Attempted import error: '$2' does not contain a default export (imported as '$1').`\r\n  )\r\n  message = message.replace(\r\n    /^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\r\n    `Attempted import error: '$1' is not exported from '$3' (imported as '$2').`\r\n  )\r\n  lines = message.split('\\n')\r\n\r\n  // Remove leading newline\r\n  if (lines.length > 2 && lines[1].trim() === '') {\r\n    lines.splice(1, 1)\r\n  }\r\n  // Clean up file name\r\n  lines[0] = lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/, '$1')\r\n\r\n  // Cleans up verbose \"module not found\" messages for files and packages.\r\n  if (lines[1] && lines[1].indexOf('Module not found: ') === 0) {\r\n    lines = [\r\n      lines[0],\r\n      lines[1].replace('Error: ', '').replace('Module not found: Cannot find file:', 'Cannot find file:'),\r\n    ]\r\n  }\r\n\r\n  message = lines.join('\\n')\r\n  // Internal stacks are generally useless so we strip them... with the\r\n  // exception of stacks containing `webpack:` because they're normally\r\n  // from user code generated by webpack. For more information see\r\n  // https://github.com/facebook/create-react-app/pull/1050\r\n  message = message.replace(/^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm, '') // at ... ...:x:y\r\n  message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, '') // at <anonymous>\r\n  lines = message.split('\\n')\r\n\r\n  // Remove duplicated newlines\r\n  lines = lines.filter((line, index, arr) => index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim())\r\n\r\n  // Reassemble the message\r\n  message = lines.join('\\n')\r\n  return message.trim()\r\n}\r\n\r\n/**\r\n * This takes the webpack stats and makes it more presentable.\r\n */\r\nexport function formatWebpackMessages(json: any) {\r\n  const formattedErrors = json.errors.map(formatMessage)\r\n  const formattedWarnings = json.warnings.map(formatMessage)\r\n  const result = { errors: formattedErrors, warnings: formattedWarnings }\r\n  if (result.errors.some(isLikelyASyntaxError)) {\r\n    // If there are any syntax errors, show just them.\r\n    result.errors = result.errors.filter(isLikelyASyntaxError)\r\n  }\r\n  return result\r\n}\r\n","import webpack from 'webpack'\r\nimport http from 'http'\r\nimport path from 'path'\r\nimport { clearWebpackConsole } from './util'\r\nimport { formatWebpackMessages } from './formatWebpackMessages'\r\nimport { reload } from '../util/reload'\r\n\r\nconst isInteractive = process.stdout.isTTY\r\n\r\nexport async function startWebpack(root: string) {\r\n  const createConfig = require(path.join(root, 'webpack.config.js'))\r\n  const config = createConfig({ dev: true })\r\n\r\n  let compiler: webpack.Compiler\r\n  try {\r\n    compiler = webpack(config, (error, stats) => {\r\n      return\r\n    })\r\n  } catch (err) {\r\n    console.log(err)\r\n\r\n    process.exit(1)\r\n  }\r\n\r\n  if (isInteractive) {\r\n    clearWebpackConsole()\r\n  }\r\n\r\n  compiler.hooks.invalid.tap('invalid', () => {\r\n    clearWebpackConsole()\r\n\r\n    console.log('Compiling...')\r\n  })\r\n\r\n  compiler.hooks.done.tap('done', async (stats) => {\r\n    clearWebpackConsole()\r\n    const messages = formatWebpackMessages(\r\n      stats.toJson({\r\n        all: false,\r\n        warnings: true,\r\n        errors: true,\r\n      })\r\n    )\r\n\r\n    for (const message of messages.errors) {\r\n      console.log(message)\r\n    }\r\n\r\n    console.log(messages.errors.length ? 'Failed to compile.' : 'Compiled successfully.')\r\n\r\n    reload()\r\n  })\r\n\r\n  return compiler.watch({}, (stats) => {\r\n    stats ?? console.log(stats)\r\n  })\r\n}\r\n","import { startWebpack } from './webpack/buildWebpack'\r\nimport path from 'path'\r\n\r\nstartWebpack(path.resolve(process.cwd()))\r\n"],"names":["isInteractive","clearWebpackConsole","friendlySyntaxErrorLabel","isLikelyASyntaxError","message","formatMessage","lines","line","parsingError","errorLine","errorColumn","errorMessage","index","arr","formatWebpackMessages","json","formattedErrors","formattedWarnings","result","startWebpack","root","config","path","compiler","webpack","error","stats","err","messages","reload"],"mappings":"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"}